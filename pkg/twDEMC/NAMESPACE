import(coda)			#thin generic

exportPattern("^[^\\.]")	#exports all variables that do not start with a period.

importFrom(abind, abind, adrop)
importFrom(twMisc, cutQuantiles, twWhichColsEqual, twMergeSequences, twLogSumExp, twMergeLists, "vectorElements<-", twListArrDim, twRescale )  
importFrom(snowfall,  sfApply, sfLapply,  sfParallel, sfExport, sfLibrary )
importFrom(twSnowfall,  sfRemoteWrapper, sfFArgsApplyLB, sfSimplifyLBResult, sfApplyMatrixLB )
importFrom(mvtnorm, rmvnorm, dmvnorm )
importFrom(MASS, cov.rob )



S3method(as.mcmc.list,twDEMC)
S3method(combinePops,twDEMC)
S3method(getNChains,twDEMC)
S3method(getNChainsPop,twDEMC)
S3method(getNGen,twDEMC)
S3method(getNParms,twDEMC)
S3method(getNPops,twDEMC)
S3method(getNSamples,twDEMC)
S3method(initZtwDEMCExt,matrix)
S3method(initZtwDEMCExt,twDEMC)
S3method(initZtwDEMCSub,matrix)
S3method(initZtwDEMCSub,twDEMC)
#S3method(replacePops,twDEMC)
S3method(stackChains,array)
S3method(stackChains,mcmc.list)
S3method(stackChains,twDEMC)
S3method(stackChainsPop,twDEMC)
S3method(subChains,twDEMC)
S3method(subset,twDEMC)
S3method(thin,twDEMC)
S3method(transOrigPopt,default)
S3method(transOrigPopt,matrix)
S3method(transOrigPopt,mcmc.list)
S3method(transOrigPopt,twDEMC)
#S3method(twDEMC,twDEMC)

S3method(twDEMCBlock,array)
S3method(twDEMCBlock,twDEMCPops)

#S3method(divideTwDEMCBatch,default)
#S3method(divideTwDEMCBatch,divideTwDEMCBatch)


